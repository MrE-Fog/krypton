name: Release
on:
  workflow_dispatch:
  
env:
  GH_TOKEN: ${{ secrets.App }}

jobs:
  buildLinux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}
          cd ..
          python -m venv krenv
          source krenv/bin/activate
          mkdir krenv/Lib
          mkdir krenv/Lib/site-packages
          sudo chmod -R a+rwx ${{ github.workspace }}
          cd ${{ github.workspace }}
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt
          mkdir kr-openssl-config
          mkdir kr-openssl-install
      - name: Build
        run: |
          cd openssl
          perl Configure --prefix=${{ github.workspace }}/kr-openssl-install --openssldir=${{ github.workspace }}/kr-openssl-config enable-fips
          make -j3 
          sudo make -j3 install
          cd ..
      - name: Build
        run: |
          source ../krenv/bin/activate
          python -m pip install --upgrade build
          python -m build --no-isolation 
      - uses: actions/upload-artifact@v3
        with:
          name: AutoBuild
          path: ${{ github.workspace }}/dist
  
  buildWin:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install VS Tools
        uses: ilammy/msvc-dev-cmd@v1
      - name: NASM and Perl
        run: |
            choco install nasm
            echo "C:\Program Files\NASM" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
            choco install strawberryperl
      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}
          py -m pip install --upgrade pip setuptools wheel
          py -m pip install -r requirements.txt
          mkdir kr-openssl-config
          mkdir kr-openssl-install
      - name: Build OSSL
        run: |
          cd openssl
          perl Configure --prefix=${{ github.workspace }}/kr-openssl-install --openssldir=${{ github.workspace }}/kr-openssl-config enable-fips
          set CL=/MP
          nmake
          nmake install
      - name: Build Module
        run: |
          py -m pip install --upgrade build
          py -m build
      - uses: actions/upload-artifact@v3
        with:
          name: AutoBuild
          path: ${{ github.workspace }}/dist

  release:
    runs-on: ubuntu-latest
    needs: [buildLinux, buildWin]
    steps: 
      - uses: actions/checkout@v3
      - name: Create Dir
        run: |
          cd ${{ secrets.workspace }}
          mkdir dist
      - uses: actions/download-artifact@v3
        with:
          name: AutoBuild
          path: ${{ secrets.workspace }}/dist
      - name: Release
        run: |
          gh release create weeklyDev dist/* -t "Weekly Auto" -p --notes "weekly dev build"