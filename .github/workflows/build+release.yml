name: Release
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          mkdir openssl-config
          mkdir openssl-install
      - name: Build
        run: |
          cd openssl
          perl Configure --prefix=${{ github.workspace }}/openssl-install --openssldir=${{ github.workspace }}/openssl-config enable-fips
          make -j3 
          sudo make -j3 install
          cd ..
      - name: Run Test
        run: |
          pip install .
          python -m unittest tests/test_BaseAPIs.py
      - name: Build
        run: |
          py -m build
      - uses: actions/upload-artifact@v3
        with:
          name: AutoBuild
          path: ${{ github.workspace }}/dist
  
  buildWin:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          cache: 'pip'
      - name: Install VS Tools
        uses: ilammy/msvc-dev-cmd@v1
      - name: NASM and Perl
        run: |
            choco install nasm
            echo "C:\Program Files\NASM" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
            choco install strawberryperl
      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          mkdir openssl-config
          mkdir openssl-install
      - name: Build
        run: |
          cd openssl
          perl Configure --prefix=${{ github.workspace }}/openssl-install --openssldir=${{ github.workspace }}/openssl-config enable-fips
          set CL=/MP
          nmake
          nmake install
      - name: Run Test
        run: |
          cd ${{ github.workspace }} 
          pip install .
          python -m unittest tests/test_BaseAPIs.py
      - name: Build
        run: |
          py -m build
      - uses: actions/upload-artifact@v3
        with:
          name: AutoBuild
          path: ${{ github.workspace }}/dist

  release:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v3
        with:
          name: AutoBuild
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "weeklyAuto"
          prerelease: true
          title: "Development Build"
          files: |
            LICENSE.md
            dist/*.whl
