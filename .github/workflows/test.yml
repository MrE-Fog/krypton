name: Test Multi Arch Build
on:
  workflow_dispatch:

env:
  CIBW_TEST_COMMAND: |
    python -m krypton --clean
    python -m unittest discover -s {project}/tests -p "*test*.py" --verbose

jobs:
  buildLinuxMultiArch:
    env:
      CIBW_ARCHS: aarch64 ppc64le s390x x86_64
      CIBW_ENVIRONMENT: LD_LIBRARY_PATH=/project/kr-openssl-install/lib64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: "true"
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
      - name: Build Extension
        run: |
          python3 -m pip install cibuildwheel
          python3 -m cibuildwheel --output-dir dist
        env:
          CIBW_BEFORE_ALL: |
            cd /project
            yum install -y perl-IPC-Cmd
            yum install -y make
            mkdir kr-openssl-config
            mkdir kr-openssl-install
            cd openssl
            perl Configure --prefix=/project/kr-openssl-install --openssldir=/project/kr-openssl-config enable-fips
            make -j3
            make -j3 install
            cd ..
      - name: Upload Build Result
        uses: actions/upload-artifact@v3
        with:
          name: AutoBuild-Linux-${{ github.event.release.tag_name }}
          path: ${{ github.workspace }}/dist/*.*

  buildWinARM:
    env:
      CIBW_ARCHS: ARM64
    runs-on: windows-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: "true"
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: Install VS Tools
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_arm64
      - name: NASM and Perl
        run: |
          choco install nasm
          echo "C:\Program Files\NASM" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          choco install strawberryperl
      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}
          py -m pip install --upgrade pip setuptools wheel
      - name: Build OSSL
        env:
          CL: /MP
        run: |
          cd openssl
          perl Configure --prefix=${{ github.workspace }}/kr-openssl-install --openssldir=${{ github.workspace }}/kr-openssl-config enable-fips
          nmake
          nmake install
      - name: Build Extension
        run: |
          cd ${{ github.workspace }}
          python -m pip install cibuildwheel
          python -m cibuildwheel --output-dir dist
      - name: Upload Build Result
        uses: actions/upload-artifact@v3
        with:
          name: AutoBuild-Windows-${{ github.event.release.tag_name }}
          path: ${{ github.workspace }}/dist/*.*
